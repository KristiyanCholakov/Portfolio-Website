[
  {
    "id": "portfolio-website",
    "title": "Modern Developer Portfolio",
    "description": "A sleek, interactive, and feature‑rich portfolio website built with Next.js and Framer Motion, designed to showcase a developer's skills, projects, and contact information.",
    "longDescription": "This portfolio website features an engaging, interactive UI powered by Framer Motion, with advanced visual effects such as a matrix background, hexagonal patterns, and neural network simulations. It offers a responsive design optimized for all device sizes, a filterable and sortable project grid with dynamic category and technology filters, an interactive tech‑stack visualization, and a fully integrated contact form with client‑side validation.\n\nBuilt with Next.js (app router) and TypeScript, the project follows industry‑standard architecture: reusable UI components, static data for projects and skills, and global utility styles. Styled with Tailwind CSS and enhanced by Three.js and Lucide React icons, it maintains code quality via ESLint and Prettier and is optimized for deployment on Vercel for performance and SEO.",
    "thumbnail": "./projects/portfolio-website.png",
    "technologies": [
      "Next.js",
      "React",
      "Tailwind CSS",
      "Framer Motion",
      "Lucide React",
      "Three.js",
      "ESLint",
      "Prettier",
      "TypeScript"
    ],
    "category": "Web Development",
    "featured": true,
    "github": "https://github.com/KristiyanCholakov/Portfolio-Website",
    "demo": "https://kristiyancholakov.com",
    "completed": "2025-04"
  },
  {
    "id": "linkedin-game-agents",
    "title": "LinkedIn Game Agents",
    "description": "A fully automated puzzle‑solving agent for LinkedIn’s Queens, Tango, and Zip games combining computer vision and algorithmic reasoning.",
    "longDescription": "This project implements end‑to‑end agents that play LinkedIn’s visual logic puzzles—Queens, Tango, and Zip—automatically. It uses Selenium to capture game screens, OpenCV and Pillow for image processing, pytesseract for OCR, and scikit‑learn for clustering. A modular core (base_game_agent and game_registry) dynamically loads each game’s solver, recognizer, and placer components.\n\nEach game employs specialized vision and algorithmic strategies: Queens uses edge filters, Hough transforms, and DBSCAN color clustering to enforce placement constraints; Tango leverages adaptive thresholding, KMeans clustering, and template matching with backtracking to respect sign‑based rules; Zip applies adaptive grid detection, dynamic OCR, wall detection, and a Hamiltonian path solver to traverse numbered cells under movement constraints.",
    "thumbnail": "./projects/linkedin-game-agents.png",
    "technologies": [
      "Python",
      "NumPy",
      "OpenCV",
      "Pillow",
      "pytesseract",
      "scikit-learn",
      "Selenium"
    ],
    "category": "Artificial Intelligence",
    "featured": false,
    "github": "https://github.com/KristiyanCholakov/LinkedIn-Games-Agents",
    "demo": "https://www.youtube.com/watch?v=XvmLhvoARe0",
    "completed": "2025-04"
  },
  {
    "id": "data-viz-climate-change",
    "title": "The Power of Visualizing Our Planet: From Data to Saving the Environment",
    "description": "An interactive data visualization project illustrating the impact of climate change through animated plots, geospatial maps, and 3D charts.",
    "longDescription": "This project creates engaging and interactive visual narratives to explore the relationship between human activity and environmental impact. It covers human progress versus environmental degradation, the causes of climate change, global consequences, and pathways to a sustainable future through a sequence of dynamic visualizations.\n\nBuilt with Python and Jupyter Notebook, the project features novel custom SVG‑based animated plots for sea level rise and Antarctic ice mass; a 4‑axis correlation plot showing industrial growth versus environmental decline; custom split bubble world maps for fossil fuel dependency; a 3D segmented water column chart of ocean temperature changes; and a bubble time plot mapping major climate events to their human impacts. Data sourcing and geospatial processing leverage pandas, NumPy, Matplotlib, Seaborn, Plotly, GeoPandas, and GeoPy.",
    "thumbnail": "./projects/data-viz-climate-change.png",
    "technologies": [
      "Python",
      "pandas",
      "NumPy",
      "Matplotlib",
      "Seaborn",
      "Plotly",
      "GeoPandas",
      "GeoPy",
      "Jupyter Notebook"
    ],
    "category": "Data Science",
    "featured": false,
    "github": "https://github.com/KristiyanCholakov/SC4024-Data-Viz-Climate-Change",
    "demo": "https://youtu.be/64C3F0kX-IU",
    "completed": "2023-12"
  },
  {
    "id": "sentiment-analysis-ablation-study",
    "title": "Sentiment Analysis Ablation Study",
    "description": "An ablation study evaluating various sentiment analysis approaches on the Rotten Tomatoes review dataset, comparing embedding strategies, RNN and transformer architectures, and ensemble techniques.",
    "longDescription": "This group project implements a sentiment classification pipeline using the Rotten Tomatoes movie review dataset. It includes Jupyter Notebooks to compare Word2Vec and GloVe embeddings with extensive preprocessing for out‑of‑vocabulary mitigation, evaluate RNN‑based architectures (with last state, max pooling, average pooling, and attention pooling), fine‑tune transformer models, and build an ensemble of multiple models.\n\nKey outcomes include a significant reduction of OOV words through preprocessing, improved accuracy from attention‑based and bidirectional RNN variants, custom transformer models achieving around 79% test accuracy, and fine‑tuned pretrained models (e.g., ELECTRA) surpassing 90%. An ensemble of these architectures further enhanced robustness and generalization.",
    "thumbnail": "./projects/sentiment-analysis-ablation-study.png",
    "technologies": [
      "Python",
      "TensorFlow",
      "PyTorch",
      "Keras",
      "Transformers",
      "gensim",
      "NLTK",
      "NumPy",
      "pandas",
      "Matplotlib"
    ],
    "category": "Artificial Intelligence",
    "featured": false,
    "github": "https://github.com/KristiyanCholakov/SC4002-Sentiment-Analysis",
    "demo": "",
    "completed": "2023-11"
  }
]